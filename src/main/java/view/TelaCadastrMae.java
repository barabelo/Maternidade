/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.JTextFieldLimit;
import controller.TableModelFactory;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import model.Baby;
import model.BabyDAO;
import model.Companion;
import model.CompanionDAO;
import model.Doctor;
import model.Mother;
import model.MotherDAO;
import model.ValorInvalidoException;
import model.ValorRepetidoException;

/**
 *
 * @author barab
 */
public class TelaCadastrMae extends javax.swing.JDialog {

    private Mother maeNoBancoDeDados = null;
    private Companion acompNoBancoDeDados = null;

    /**
     * Creates new form DialogCadastrarMae
     *
     * @param parent
     * @param modal
     */
    public TelaCadastrMae(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        configComponents();
        pnlDadosPessoais.setVisible(true);
        pnlFilhos.setVisible(false);
        pnlMedicos.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lrpEtapasCadastro = new javax.swing.JLayeredPane();
        pnlDadosPessoais = new javax.swing.JPanel();
        pnlMae = new javax.swing.JPanel();
        lblNomeMae = new javax.swing.JLabel();
        txtNomeMae = new javax.swing.JTextField();
        lblDataNascMae = new javax.swing.JLabel();
        txfDataNascMae = new javax.swing.JFormattedTextField();
        lblCPFMae = new javax.swing.JLabel();
        lblRGMae = new javax.swing.JLabel();
        txtRGMae = new javax.swing.JTextField();
        txfCPFMae = new javax.swing.JFormattedTextField();
        lblAvisoMae = new javax.swing.JLabel();
        pnlAcompanhante = new javax.swing.JPanel();
        lblNomeAcomp = new javax.swing.JLabel();
        txtNomeAcomp = new javax.swing.JTextField();
        lblParentescoAcomp = new javax.swing.JLabel();
        txtParentescoAcomp = new javax.swing.JTextField();
        lblCPFAcomp = new javax.swing.JLabel();
        lblRGAcomp = new javax.swing.JLabel();
        txtRGAcomp = new javax.swing.JTextField();
        lblEmailAcomp = new javax.swing.JLabel();
        lblTelAcomp = new javax.swing.JLabel();
        txtTelAcomp = new javax.swing.JTextField();
        txtEmailAcomp = new javax.swing.JTextField();
        lblSexoAcomp = new javax.swing.JLabel();
        cmbSexoAcomp = new javax.swing.JComboBox<>();
        ckbNaoPossuiAcomp = new javax.swing.JCheckBox();
        txfCPFAcomp = new javax.swing.JFormattedTextField();
        lblAvisoAcomp = new javax.swing.JLabel();
        btnProxDoPnlDados = new javax.swing.JButton();
        btnCancelarPnlDados = new javax.swing.JButton();
        pnlFilhos = new javax.swing.JPanel();
        btnProxPnlFilhos = new javax.swing.JButton();
        btnAntPnlFilhos = new javax.swing.JButton();
        btnCancelarDoPnlFilhos = new javax.swing.JButton();
        subPnlFilhos = new javax.swing.JPanel();
        btnAddFilho = new javax.swing.JButton();
        btnEditFilho = new javax.swing.JButton();
        btnExcluirFilho = new javax.swing.JButton();
        scrFilhos = new javax.swing.JScrollPane();
        tblFilhos = new javax.swing.JTable();
        pnlMedicos = new javax.swing.JPanel();
        btnCadastrarDoPnlMedicos = new javax.swing.JButton();
        pnlMedicosRespons = new javax.swing.JPanel();
        scrMedicosRespons = new javax.swing.JScrollPane();
        tblMedicosRespons = new javax.swing.JTable();
        btnRemovDosMedicosRespons = new javax.swing.JButton();
        lblCRMMedicoRespons = new javax.swing.JLabel();
        txtCRMMedicoRespons = new javax.swing.JTextField();
        btnBuscarMedicoRespons = new javax.swing.JButton();
        pnlTodosMedicos = new javax.swing.JPanel();
        scrTodosMedicos = new javax.swing.JScrollPane();
        tblTodosMedicos = new javax.swing.JTable();
        btnAddAosMedicosRespons = new javax.swing.JButton();
        lblCRMMedico = new javax.swing.JLabel();
        txtCRMMedico = new javax.swing.JTextField();
        btnBuscarDoPnlTodosMedicos = new javax.swing.JButton();
        btnAntDoPnlMedicos = new javax.swing.JButton();
        btnCancelarDoPnlMedicos = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastrar M찾e");
        setIconImage(null);
        setResizable(false);

        pnlMae.setBorder(javax.swing.BorderFactory.createTitledBorder("M찾e"));

        lblNomeMae.setText("Nome:");

        lblDataNascMae.setText("Data de nascimento:");

        try {
            txfDataNascMae.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        lblCPFMae.setText("CPF:");

        lblRGMae.setText("RG:");

        try {
            txfCPFMae.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        lblAvisoMae.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblAvisoMae.setText("Todos os campos s찾o obrigat처rios");

        javax.swing.GroupLayout pnlMaeLayout = new javax.swing.GroupLayout(pnlMae);
        pnlMae.setLayout(pnlMaeLayout);
        pnlMaeLayout.setHorizontalGroup(
            pnlMaeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMaeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMaeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMaeLayout.createSequentialGroup()
                        .addComponent(lblNomeMae)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNomeMae, javax.swing.GroupLayout.DEFAULT_SIZE, 968, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDataNascMae)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txfDataNascMae, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlMaeLayout.createSequentialGroup()
                        .addComponent(lblCPFMae)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txfCPFMae))
                    .addGroup(pnlMaeLayout.createSequentialGroup()
                        .addComponent(lblRGMae)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtRGMae))
                    .addGroup(pnlMaeLayout.createSequentialGroup()
                        .addComponent(lblAvisoMae)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlMaeLayout.setVerticalGroup(
            pnlMaeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMaeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAvisoMae)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlMaeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNomeMae)
                    .addComponent(txtNomeMae, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDataNascMae)
                    .addComponent(txfDataNascMae, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMaeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCPFMae)
                    .addComponent(txfCPFMae, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMaeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRGMae)
                    .addComponent(txtRGMae, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlAcompanhante.setBorder(javax.swing.BorderFactory.createTitledBorder("Acompanhante"));

        lblNomeAcomp.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblNomeAcomp.setText("Nome:");

        lblParentescoAcomp.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblParentescoAcomp.setText("Parentesco:");

        lblCPFAcomp.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblCPFAcomp.setText("CPF:");

        lblRGAcomp.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblRGAcomp.setText("RG:");

        lblEmailAcomp.setText("Email:");

        lblTelAcomp.setText("Telefone:");

        lblSexoAcomp.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblSexoAcomp.setText("Sexo:");

        cmbSexoAcomp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "Masculino", "Feminino" }));
        cmbSexoAcomp.setMaximumSize(new java.awt.Dimension(89, 26));
        cmbSexoAcomp.setMinimumSize(new java.awt.Dimension(89, 26));
        cmbSexoAcomp.setPreferredSize(new java.awt.Dimension(89, 26));

        ckbNaoPossuiAcomp.setText("N찾o possui");
        ckbNaoPossuiAcomp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbNaoPossuiAcompActionPerformed(evt);
            }
        });

        try {
            txfCPFAcomp.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        lblAvisoAcomp.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblAvisoAcomp.setText("Os campos em negrito s찾o obrigat처rios");

        javax.swing.GroupLayout pnlAcompanhanteLayout = new javax.swing.GroupLayout(pnlAcompanhante);
        pnlAcompanhante.setLayout(pnlAcompanhanteLayout);
        pnlAcompanhanteLayout.setHorizontalGroup(
            pnlAcompanhanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAcompanhanteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAcompanhanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAcompanhanteLayout.createSequentialGroup()
                        .addComponent(lblNomeAcomp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNomeAcomp))
                    .addGroup(pnlAcompanhanteLayout.createSequentialGroup()
                        .addComponent(lblParentescoAcomp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtParentescoAcomp, javax.swing.GroupLayout.DEFAULT_SIZE, 1141, Short.MAX_VALUE))
                    .addGroup(pnlAcompanhanteLayout.createSequentialGroup()
                        .addComponent(lblRGAcomp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtRGAcomp))
                    .addGroup(pnlAcompanhanteLayout.createSequentialGroup()
                        .addComponent(lblTelAcomp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTelAcomp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblSexoAcomp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbSexoAcomp, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlAcompanhanteLayout.createSequentialGroup()
                        .addComponent(lblEmailAcomp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEmailAcomp))
                    .addGroup(pnlAcompanhanteLayout.createSequentialGroup()
                        .addComponent(lblCPFAcomp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txfCPFAcomp))
                    .addGroup(pnlAcompanhanteLayout.createSequentialGroup()
                        .addGroup(pnlAcompanhanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ckbNaoPossuiAcomp)
                            .addComponent(lblAvisoAcomp))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlAcompanhanteLayout.setVerticalGroup(
            pnlAcompanhanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAcompanhanteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ckbNaoPossuiAcomp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblAvisoAcomp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlAcompanhanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNomeAcomp)
                    .addComponent(txtNomeAcomp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAcompanhanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblParentescoAcomp)
                    .addComponent(txtParentescoAcomp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAcompanhanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCPFAcomp)
                    .addComponent(txfCPFAcomp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAcompanhanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRGAcomp)
                    .addComponent(txtRGAcomp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAcompanhanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmailAcomp)
                    .addComponent(txtEmailAcomp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAcompanhanteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTelAcomp)
                    .addComponent(txtTelAcomp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSexoAcomp)
                    .addComponent(cmbSexoAcomp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnProxDoPnlDados.setText("Pr처ximo");
        btnProxDoPnlDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProxDoPnlDadosActionPerformed(evt);
            }
        });

        btnCancelarPnlDados.setText("Cancelar");
        btnCancelarPnlDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarPnlDadosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDadosPessoaisLayout = new javax.swing.GroupLayout(pnlDadosPessoais);
        pnlDadosPessoais.setLayout(pnlDadosPessoaisLayout);
        pnlDadosPessoaisLayout.setHorizontalGroup(
            pnlDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosPessoaisLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlAcompanhante, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlMae, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDadosPessoaisLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnProxDoPnlDados, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelarPnlDados)))
                .addContainerGap())
        );
        pnlDadosPessoaisLayout.setVerticalGroup(
            pnlDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosPessoaisLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlMae, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlAcompanhante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnProxDoPnlDados)
                    .addComponent(btnCancelarPnlDados))
                .addContainerGap())
        );

        btnProxPnlFilhos.setText("Pr처ximo");
        btnProxPnlFilhos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProxPnlFilhosActionPerformed(evt);
            }
        });

        btnAntPnlFilhos.setText("Anterior");
        btnAntPnlFilhos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAntPnlFilhosActionPerformed(evt);
            }
        });

        btnCancelarDoPnlFilhos.setText("Cancelar");
        btnCancelarDoPnlFilhos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarDoPnlFilhosActionPerformed(evt);
            }
        });

        subPnlFilhos.setBorder(javax.swing.BorderFactory.createTitledBorder("Filhos"));

        btnAddFilho.setText("Adicionar");
        btnAddFilho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddFilhoActionPerformed(evt);
            }
        });

        btnEditFilho.setText("Editar");
        btnEditFilho.setEnabled(false);
        btnEditFilho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditFilhoActionPerformed(evt);
            }
        });

        btnExcluirFilho.setText("Excluir");
        btnExcluirFilho.setEnabled(false);
        btnExcluirFilho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirFilhoActionPerformed(evt);
            }
        });

        tblFilhos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Identificador", "Nome", "Sexo", "Altura (cm)", "Peso (kg)", "Data de nascimento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblFilhos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblFilhosMouseClicked(evt);
            }
        });
        scrFilhos.setViewportView(tblFilhos);

        javax.swing.GroupLayout subPnlFilhosLayout = new javax.swing.GroupLayout(subPnlFilhos);
        subPnlFilhos.setLayout(subPnlFilhosLayout);
        subPnlFilhosLayout.setHorizontalGroup(
            subPnlFilhosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subPnlFilhosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(subPnlFilhosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(subPnlFilhosLayout.createSequentialGroup()
                        .addGap(0, 1005, Short.MAX_VALUE)
                        .addComponent(btnExcluirFilho)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditFilho)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddFilho))
                    .addComponent(scrFilhos))
                .addContainerGap())
        );

        subPnlFilhosLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAddFilho, btnEditFilho, btnExcluirFilho});

        subPnlFilhosLayout.setVerticalGroup(
            subPnlFilhosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subPnlFilhosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrFilhos, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(subPnlFilhosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddFilho)
                    .addComponent(btnEditFilho)
                    .addComponent(btnExcluirFilho))
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlFilhosLayout = new javax.swing.GroupLayout(pnlFilhos);
        pnlFilhos.setLayout(pnlFilhosLayout);
        pnlFilhosLayout.setHorizontalGroup(
            pnlFilhosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFilhosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFilhosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFilhosLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAntPnlFilhos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnProxPnlFilhos, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelarDoPnlFilhos))
                    .addComponent(subPnlFilhos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pnlFilhosLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAntPnlFilhos, btnCancelarDoPnlFilhos, btnProxPnlFilhos});

        pnlFilhosLayout.setVerticalGroup(
            pnlFilhosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFilhosLayout.createSequentialGroup()
                .addComponent(subPnlFilhos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlFilhosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnProxPnlFilhos)
                    .addComponent(btnAntPnlFilhos)
                    .addComponent(btnCancelarDoPnlFilhos))
                .addContainerGap())
        );

        btnCadastrarDoPnlMedicos.setText("Cadastrar");
        btnCadastrarDoPnlMedicos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarDoPnlMedicosActionPerformed(evt);
            }
        });

        pnlMedicosRespons.setBorder(javax.swing.BorderFactory.createTitledBorder("M챕dicos respons찼veis"));

        tblMedicosRespons.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Especialidade", "CRM"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrMedicosRespons.setViewportView(tblMedicosRespons);

        btnRemovDosMedicosRespons.setText("Remover dos m챕dicos respons찼veis");

        lblCRMMedicoRespons.setText("CRM:");

        btnBuscarMedicoRespons.setText("Buscar na lista");

        javax.swing.GroupLayout pnlMedicosResponsLayout = new javax.swing.GroupLayout(pnlMedicosRespons);
        pnlMedicosRespons.setLayout(pnlMedicosResponsLayout);
        pnlMedicosResponsLayout.setHorizontalGroup(
            pnlMedicosResponsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMedicosResponsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMedicosResponsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrMedicosRespons, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE)
                    .addGroup(pnlMedicosResponsLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnRemovDosMedicosRespons))
                    .addGroup(pnlMedicosResponsLayout.createSequentialGroup()
                        .addComponent(lblCRMMedicoRespons)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCRMMedicoRespons)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscarMedicoRespons)))
                .addContainerGap())
        );
        pnlMedicosResponsLayout.setVerticalGroup(
            pnlMedicosResponsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMedicosResponsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMedicosResponsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCRMMedicoRespons)
                    .addComponent(txtCRMMedicoRespons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarMedicoRespons))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrMedicosRespons, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRemovDosMedicosRespons)
                .addContainerGap())
        );

        pnlTodosMedicos.setBorder(javax.swing.BorderFactory.createTitledBorder("Todos os m챕dicos"));

        tblTodosMedicos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Especialidade", "CRM"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrTodosMedicos.setViewportView(tblTodosMedicos);

        btnAddAosMedicosRespons.setText("Adicionar aos m챕dicos respons찼veis");

        lblCRMMedico.setText("CRM:");

        btnBuscarDoPnlTodosMedicos.setText("Buscar na lista");

        javax.swing.GroupLayout pnlTodosMedicosLayout = new javax.swing.GroupLayout(pnlTodosMedicos);
        pnlTodosMedicos.setLayout(pnlTodosMedicosLayout);
        pnlTodosMedicosLayout.setHorizontalGroup(
            pnlTodosMedicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTodosMedicosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTodosMedicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlTodosMedicosLayout.createSequentialGroup()
                        .addComponent(scrTodosMedicos, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE)
                        .addGap(7, 7, 7))
                    .addGroup(pnlTodosMedicosLayout.createSequentialGroup()
                        .addComponent(btnAddAosMedicosRespons)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlTodosMedicosLayout.createSequentialGroup()
                        .addComponent(lblCRMMedico)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCRMMedico)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscarDoPnlTodosMedicos)
                        .addContainerGap())))
        );
        pnlTodosMedicosLayout.setVerticalGroup(
            pnlTodosMedicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTodosMedicosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTodosMedicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCRMMedico)
                    .addComponent(txtCRMMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarDoPnlTodosMedicos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrTodosMedicos, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddAosMedicosRespons)
                .addContainerGap())
        );

        btnAntDoPnlMedicos.setText("Anterior");
        btnAntDoPnlMedicos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAntDoPnlMedicosActionPerformed(evt);
            }
        });

        btnCancelarDoPnlMedicos.setText("Cancelar");
        btnCancelarDoPnlMedicos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarDoPnlMedicosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMedicosLayout = new javax.swing.GroupLayout(pnlMedicos);
        pnlMedicos.setLayout(pnlMedicosLayout);
        pnlMedicosLayout.setHorizontalGroup(
            pnlMedicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMedicosLayout.createSequentialGroup()
                .addGroup(pnlMedicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMedicosLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAntDoPnlMedicos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCadastrarDoPnlMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelarDoPnlMedicos))
                    .addGroup(pnlMedicosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pnlMedicosRespons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlTodosMedicos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlMedicosLayout.setVerticalGroup(
            pnlMedicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMedicosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMedicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlMedicosRespons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlTodosMedicos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMedicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCadastrarDoPnlMedicos)
                    .addComponent(btnAntDoPnlMedicos)
                    .addComponent(btnCancelarDoPnlMedicos))
                .addContainerGap())
        );

        lrpEtapasCadastro.setLayer(pnlDadosPessoais, javax.swing.JLayeredPane.DEFAULT_LAYER);
        lrpEtapasCadastro.setLayer(pnlFilhos, javax.swing.JLayeredPane.DEFAULT_LAYER);
        lrpEtapasCadastro.setLayer(pnlMedicos, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout lrpEtapasCadastroLayout = new javax.swing.GroupLayout(lrpEtapasCadastro);
        lrpEtapasCadastro.setLayout(lrpEtapasCadastroLayout);
        lrpEtapasCadastroLayout.setHorizontalGroup(
            lrpEtapasCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lrpEtapasCadastroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlDadosPessoais, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(lrpEtapasCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lrpEtapasCadastroLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnlFilhos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(lrpEtapasCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lrpEtapasCadastroLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnlMedicos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        lrpEtapasCadastroLayout.setVerticalGroup(
            lrpEtapasCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lrpEtapasCadastroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlDadosPessoais, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(lrpEtapasCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lrpEtapasCadastroLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnlFilhos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(lrpEtapasCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lrpEtapasCadastroLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnlMedicos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lrpEtapasCadastro)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lrpEtapasCadastro)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnProxDoPnlDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProxDoPnlDadosActionPerformed
        StringBuilder msgErro = new StringBuilder();
        if (ckbNaoPossuiAcomp.isSelected()) {
            if (todosOsCamposObrigatoriosDaMaeForamPreench()) {
                try {
                    cadastrMae(pegaDadosMae());
                } catch (ValorInvalidoException | ValorRepetidoException ex) {
                    msgErro.append(ex.getMessage());
                }
                if (acompNoBancoDeDados != null) {
                    CompanionDAO.delete(acompNoBancoDeDados.getCpf());
                }
            } else {
                msgErro.append("Nem todos os campos obrigat처rios foram preenchidos\nTodos os campos da m찾e s찾o obrigat처rios.");
            }
        } else if (todosOsCamposObrigatoriosDaMaeForamPreench()
                && todosOsCamposObrigatoriosDoAcompForamPreench()) {
            Mother mae = null;
            try {
                mae = pegaDadosMae();
            } catch (ValorInvalidoException ex) {
                msgErro.append(ex.getMessage());
            }
            Companion acomp = null;
            try {
                acomp = pegaDadosAcomp();
            } catch (ValorInvalidoException ex) {
                if (msgErro.length() > 0) {
                    msgErro.append("\n");
                }
                msgErro.append(ex.getMessage());
            }
            if (mae != null && acomp != null) {
                try {
                    cadastrMae(mae);
                    cadastrAcomp(acomp);
                } catch (ValorRepetidoException ex) {
                    msgErro.append(ex.getMessage());
                }
            }
        } else {
            msgErro.append("Nem todos os campos obrigat처rios foram preenchidos\n");
            if (todosOsCamposObrigatoriosDoAcompForamPreench()) {
                msgErro.append("Todos os campos da m찾e s찾o obrigat처rios.");
            } else if (todosOsCamposObrigatoriosDaMaeForamPreench()) {
                msgErro.append("Os campos em negrito do acompanhante s찾o obrigat처rios.");
            } else {
                msgErro.append("Todos os campos da m찾e s찾o obrigat처rios.\nOs campos em negrito do acompanhante s찾o obrigat처rios.");
            }
        }
        if (msgErro.length() == 0) {
            avancaParaAProximaTela();
        } else {
            JOptionPane.showMessageDialog(pnlDadosPessoais, msgErro.toString(), "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnProxDoPnlDadosActionPerformed

    private Mother pegaDadosMae() throws ValorInvalidoException {
        Mother mae = new Mother();
        StringBuilder msgErro = new StringBuilder();
        try {
            mae.setName(txtNomeMae.getText());
        } catch (ValorInvalidoException ex) {
            msgErro.append(ex.getMessage());
        }
        try {
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            LocalDate dataNasc = LocalDate.parse(txfDataNascMae.getText(), formatter);
            mae.setBirthday(dataNasc);
        } catch (DateTimeParseException ex) {
            if (msgErro.length() > 0) {
                msgErro.append("\n");
            }
            msgErro.append("Data de nascimento da m찾e inv찼lida.");
        }
        try {
            mae.setRg(txtRGMae.getText());
        } catch (ValorInvalidoException ex) {
            if (msgErro.length() > 0) {
                msgErro.append("\n");
            }
            msgErro.append(ex.getMessage());
        }
        mae.setCpf(txfCPFMae.getText());

        if (msgErro.length() == 0) {
            return mae;
        } else {
            throw new ValorInvalidoException(msgErro.toString());
        }
    }

    private void cadastrMae(Mother mae) throws ValorRepetidoException {
        if (maeNoBancoDeDados == null) {
            MotherDAO.insert(mae);
            maeNoBancoDeDados = mae;
        } else {
            if ((mae.hashCode() != maeNoBancoDeDados.hashCode()) && !mae.equals(maeNoBancoDeDados)) {
                MotherDAO.update(maeNoBancoDeDados.getCpf(), mae);
                maeNoBancoDeDados = mae;
            }
        }
    }

    private Companion pegaDadosAcomp() throws ValorInvalidoException {
        Companion acomp = new Companion();
        StringBuilder msgErro = new StringBuilder();
        try {
            acomp.setName(txtNomeAcomp.getText());
        } catch (ValorInvalidoException ex) {
            msgErro.append(ex.getMessage());
        }
        try {
            acomp.setKinship(txtParentescoAcomp.getText());
        } catch (ValorInvalidoException ex) {
            if (msgErro.length() > 0) {
                msgErro.append("\n");
            }
            msgErro.append(ex.getMessage());
        }
        try {
            acomp.setRg(txtRGAcomp.getText());
        } catch (ValorInvalidoException ex) {
            if (msgErro.length() > 0) {
                msgErro.append("\n");
            }
            msgErro.append(ex.getMessage());
        }
        if (!txtEmailAcomp.getText().isEmpty()) {
            try {
                acomp.setEmail(txtEmailAcomp.getText());
            } catch (ValorInvalidoException ex) {
                if (msgErro.length() > 0) {
                    msgErro.append("\n");
                }
                msgErro.append(ex.getMessage());
            }
        }
        if (!txtTelAcomp.getText().isEmpty()) {
            try {
                acomp.setPhone(txtTelAcomp.getText());
            } catch (ValorInvalidoException ex) {
                if (msgErro.length() > 0) {
                    msgErro.append("\n");
                }
                msgErro.append(ex.getMessage());
            }
        }
        acomp.setCpf(txfCPFAcomp.getText());
        acomp.setSex(cmbSexoAcomp.getSelectedItem().toString());
        acomp.setMotherCpf(txfCPFMae.getText());
        if (msgErro.length() == 0) {
            return acomp;
        } else {
            throw new ValorInvalidoException(msgErro.toString());
        }
    }

    private void cadastrAcomp(Companion acomp) throws ValorRepetidoException {
        if (acompNoBancoDeDados == null) {
            CompanionDAO.insert(acomp);
            acompNoBancoDeDados = acomp;
        } else {
            if ((acomp.hashCode() != acompNoBancoDeDados.hashCode()) && !acomp.equals(acompNoBancoDeDados)) {
                CompanionDAO.update(acompNoBancoDeDados.getCpf(), acomp);
                acompNoBancoDeDados = acomp;
            }
        }
    }

    private void avancaParaAProximaTela() {
        if (pnlDadosPessoais.isVisible()) {
            pnlDadosPessoais.setVisible(false);
            pnlFilhos.setVisible(true);
        } else if (pnlFilhos.isVisible()) {
            pnlFilhos.setVisible(false);
            pnlMedicos.setVisible(true);
        } else {
            throw new RuntimeException("N찾o existe pr처xima tela.");
        }
    }

    private void voltaParaATelaAnterior() {
        if (pnlMedicos.isVisible()) {
            pnlMedicos.setVisible(false);
            pnlFilhos.setVisible(true);
        } else if (pnlFilhos.isVisible()) {
            pnlFilhos.setVisible(false);
            pnlDadosPessoais.setVisible(true);
        } else {
            throw new RuntimeException("N찾o existe tela anterior.");
        }
    }

    private void configComponents() {
        txtNomeMae.setDocument(new JTextFieldLimit(Mother.TAM_MAX_NAME));
        txtRGMae.setDocument(new JTextFieldLimit(Mother.TAM_MAX_RG));
        txtEmailAcomp.setDocument(new JTextFieldLimit(Companion.TAM_MAX_EMAIL));
        txtNomeAcomp.setDocument(new JTextFieldLimit(Companion.TAM_MAX_NAME));
        txtParentescoAcomp.setDocument(new JTextFieldLimit(Companion.TAM_MAX_KINSHIP));
        txtRGAcomp.setDocument(new JTextFieldLimit(Companion.TAM_MAX_RG));
        txtTelAcomp.setDocument(new JTextFieldLimit(Companion.TAM_MAX_RG));
        txtCRMMedico.setDocument(new JTextFieldLimit(Doctor.TAM_MAX_CRM));
        txtCRMMedicoRespons.setDocument(new JTextFieldLimit(Doctor.TAM_MAX_CRM));
        scrFilhos.setViewportView(tblFilhos);
        scrMedicosRespons.setViewportView(tblMedicosRespons);
        scrTodosMedicos.setViewportView(tblTodosMedicos);
    }

    private void btnProxPnlFilhosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProxPnlFilhosActionPerformed
        pnlDadosPessoais.setVisible(false);
        pnlFilhos.setVisible(false);
        pnlMedicos.setVisible(true);
    }//GEN-LAST:event_btnProxPnlFilhosActionPerformed

    private void btnAntPnlFilhosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAntPnlFilhosActionPerformed
        voltaParaATelaAnterior();
    }//GEN-LAST:event_btnAntPnlFilhosActionPerformed

    private void btnAntDoPnlMedicosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAntDoPnlMedicosActionPerformed
        voltaParaATelaAnterior();
    }//GEN-LAST:event_btnAntDoPnlMedicosActionPerformed

    private void btnCancelarPnlDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarPnlDadosActionPerformed
        cancelarCadastro();
        dispose();
    }//GEN-LAST:event_btnCancelarPnlDadosActionPerformed

    private void btnCancelarDoPnlFilhosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarDoPnlFilhosActionPerformed
        cancelarCadastro();
        dispose();
    }//GEN-LAST:event_btnCancelarDoPnlFilhosActionPerformed

    private void btnCancelarDoPnlMedicosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarDoPnlMedicosActionPerformed
        cancelarCadastro();
        dispose();
    }//GEN-LAST:event_btnCancelarDoPnlMedicosActionPerformed

    private void cancelarCadastro() {
        if (maeNoBancoDeDados != null) {
            MotherDAO.delete(maeNoBancoDeDados.getCpf());
        }
    }

    private void ckbNaoPossuiAcompActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbNaoPossuiAcompActionPerformed
        if (ckbNaoPossuiAcomp.isSelected()) {
            setDadosAcompEnabled(false);
        } else {
            setDadosAcompEnabled(true);
        }
    }//GEN-LAST:event_ckbNaoPossuiAcompActionPerformed

    private void btnAddFilhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddFilhoActionPerformed
        TelaAddFilho telaAddFilho = new TelaAddFilho(null, true, maeNoBancoDeDados.getCpf());
        telaAddFilho.setLocationRelativeTo(null);
        telaAddFilho.setVisible(true);
        preencheTabelaBebes();
        btnExcluirFilho.setEnabled(false); // Porque nenhum item da tabela estar찼 selecionado.
        btnEditFilho.setEnabled(false);
    }//GEN-LAST:event_btnAddFilhoActionPerformed

    private void btnCadastrarDoPnlMedicosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarDoPnlMedicosActionPerformed
        dispose();
    }//GEN-LAST:event_btnCadastrarDoPnlMedicosActionPerformed

    private void btnExcluirFilhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirFilhoActionPerformed
        int indices[] = tblFilhos.getSelectedRows();
        if (indices.length > 1) {
            int opcao = JOptionPane.showConfirmDialog(null, "Confirma "
                    + "exclus찾o de v찼rios beb챗s?", "Confirma챌찾o de "
                    + "exclus찾o", JOptionPane.YES_NO_OPTION);
            if (opcao == JOptionPane.YES_OPTION) {
                for (int indice : indices) {
                    TableModel modelo = tblFilhos.getModel();
                    String id = modelo.getValueAt(indice, 0).toString();
                    BabyDAO.delete(id);
                }
            }
        } else {
            TableModel modelo = tblFilhos.getModel();
            String id = modelo.getValueAt(indices[0], 0).toString();
            BabyDAO.delete(id);
        }
        preencheTabelaBebes();
        btnExcluirFilho.setEnabled(false); // Porque nenhum item da tabela estar찼 selecionado.
        btnEditFilho.setEnabled(false);
    }//GEN-LAST:event_btnExcluirFilhoActionPerformed

    private void btnEditFilhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditFilhoActionPerformed
        int indices[] = tblFilhos.getSelectedRows();
        if (indices.length > 1) {
            JOptionPane.showMessageDialog(pnlAcompanhante, "Selecione apenas "
                    + "um filho para editar.");
        } else {
            TableModel modelo = tblFilhos.getModel();
            String id = modelo.getValueAt(indices[0], 0).toString();
            Baby baby = BabyDAO.searchById(id);
            TelaEditFilho telaEditFilho = new TelaEditFilho(null, true, baby);
            telaEditFilho.setLocationRelativeTo(null);
            telaEditFilho.setVisible(true);
            preencheTabelaBebes();
            btnExcluirFilho.setEnabled(false); // Porque nenhum item da tabela estar찼 selecionado.
            btnEditFilho.setEnabled(false);
        }
    }//GEN-LAST:event_btnEditFilhoActionPerformed

    private void tblFilhosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblFilhosMouseClicked
        btnEditFilho.setEnabled(true);
        btnExcluirFilho.setEnabled(true);
    }//GEN-LAST:event_tblFilhosMouseClicked

    private void setDadosAcompEnabled(boolean isEnabled) {
        lblAvisoAcomp.setEnabled(isEnabled);
        lblCPFAcomp.setEnabled(isEnabled);
        lblEmailAcomp.setEnabled(isEnabled);
        lblNomeAcomp.setEnabled(isEnabled);
        lblParentescoAcomp.setEnabled(isEnabled);
        lblRGAcomp.setEnabled(isEnabled);
        lblSexoAcomp.setEnabled(isEnabled);
        lblTelAcomp.setEnabled(isEnabled);
        txfCPFAcomp.setEnabled(isEnabled);
        txtEmailAcomp.setEnabled(isEnabled);
        txtNomeAcomp.setEnabled(isEnabled);
        txtParentescoAcomp.setEnabled(isEnabled);
        txtRGAcomp.setEnabled(isEnabled);
        txtTelAcomp.setEnabled(isEnabled);
        cmbSexoAcomp.setEnabled(isEnabled);
    }

    private boolean todosOsCamposObrigatoriosDaMaeForamPreench() {
        return !(txtNomeMae.getText().isEmpty()
                || txfDataNascMae.getText().contains(" ")
                || txfCPFMae.getText().contains(" ")
                || txtRGMae.getText().isEmpty());
    }

    private boolean todosOsCamposObrigatoriosDoAcompForamPreench() {
        return !txtNomeAcomp.getText().isEmpty()
                && !txtParentescoAcomp.getText().isEmpty()
                && !txfCPFAcomp.getText().contains(" ")
                && !txtRGAcomp.getText().isEmpty()
                && !cmbSexoAcomp.getSelectedItem().equals("Selecione");
    }

    private void preencheTabelaBebes() {
        tblFilhos.setModel(TableModelFactory.criarTblModelBebes(BabyDAO.selectSonsOf(maeNoBancoDeDados.getCpf())));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCadastrMae.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCadastrMae.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCadastrMae.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCadastrMae.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaCadastrMae dialog = new TelaCadastrMae(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddAosMedicosRespons;
    private javax.swing.JButton btnAddFilho;
    private javax.swing.JButton btnAntDoPnlMedicos;
    private javax.swing.JButton btnAntPnlFilhos;
    private javax.swing.JButton btnBuscarDoPnlTodosMedicos;
    private javax.swing.JButton btnBuscarMedicoRespons;
    private javax.swing.JButton btnCadastrarDoPnlMedicos;
    private javax.swing.JButton btnCancelarDoPnlFilhos;
    private javax.swing.JButton btnCancelarDoPnlMedicos;
    private javax.swing.JButton btnCancelarPnlDados;
    private javax.swing.JButton btnEditFilho;
    private javax.swing.JButton btnExcluirFilho;
    private javax.swing.JButton btnProxDoPnlDados;
    private javax.swing.JButton btnProxPnlFilhos;
    private javax.swing.JButton btnRemovDosMedicosRespons;
    private javax.swing.JCheckBox ckbNaoPossuiAcomp;
    private javax.swing.JComboBox<String> cmbSexoAcomp;
    private javax.swing.JLabel lblAvisoAcomp;
    private javax.swing.JLabel lblAvisoMae;
    private javax.swing.JLabel lblCPFAcomp;
    private javax.swing.JLabel lblCPFMae;
    private javax.swing.JLabel lblCRMMedico;
    private javax.swing.JLabel lblCRMMedicoRespons;
    private javax.swing.JLabel lblDataNascMae;
    private javax.swing.JLabel lblEmailAcomp;
    private javax.swing.JLabel lblNomeAcomp;
    private javax.swing.JLabel lblNomeMae;
    private javax.swing.JLabel lblParentescoAcomp;
    private javax.swing.JLabel lblRGAcomp;
    private javax.swing.JLabel lblRGMae;
    private javax.swing.JLabel lblSexoAcomp;
    private javax.swing.JLabel lblTelAcomp;
    private javax.swing.JLayeredPane lrpEtapasCadastro;
    private javax.swing.JPanel pnlAcompanhante;
    private javax.swing.JPanel pnlDadosPessoais;
    private javax.swing.JPanel pnlFilhos;
    private javax.swing.JPanel pnlMae;
    private javax.swing.JPanel pnlMedicos;
    private javax.swing.JPanel pnlMedicosRespons;
    private javax.swing.JPanel pnlTodosMedicos;
    private javax.swing.JScrollPane scrFilhos;
    private javax.swing.JScrollPane scrMedicosRespons;
    private javax.swing.JScrollPane scrTodosMedicos;
    private javax.swing.JPanel subPnlFilhos;
    private javax.swing.JTable tblFilhos;
    private javax.swing.JTable tblMedicosRespons;
    private javax.swing.JTable tblTodosMedicos;
    private javax.swing.JFormattedTextField txfCPFAcomp;
    private javax.swing.JFormattedTextField txfCPFMae;
    private javax.swing.JFormattedTextField txfDataNascMae;
    private javax.swing.JTextField txtCRMMedico;
    private javax.swing.JTextField txtCRMMedicoRespons;
    private javax.swing.JTextField txtEmailAcomp;
    private javax.swing.JTextField txtNomeAcomp;
    private javax.swing.JTextField txtNomeMae;
    private javax.swing.JTextField txtParentescoAcomp;
    private javax.swing.JTextField txtRGAcomp;
    private javax.swing.JTextField txtRGMae;
    private javax.swing.JTextField txtTelAcomp;
    // End of variables declaration//GEN-END:variables
}
